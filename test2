import math
import numpy as np
from scipy.fftpack import diff as psdiff
import matplotlib.pyplot as plt
from numpy.fft import fft,ifft

def Kdvanalytic(x,t,c,a):
    return .5*c*(np.cosh(.5*math.sqrt(c)*(x - c*t - a)))**(-2)



def kdv_euler(Nx,Nt,u0):
    y = np.zeros((Nx,Nt))
    y[:,0] = u0
    for n in range(1,Nt):
        a = 2*np.pi*(k/L)
        u_hat = np.fft.fft(y[:,n-1])
        g_hat = (np.exp(dt*1j*a**3)* u_hat)
        g = (np.fft.ifft(g_hat))
        g2 = (np.fft.ifft(1j*a*np.fft.fft(g**2)))
        y[:,n] = np.real(g - 3*g2*dt)
    return y


# parameters for the initial condition
c1 = 0.75
c2 = 0.4
a1 = 0.33
a2 = 0.65
# constants
Nx = 256     # space step
L = 50.      # period
x = np.linspace(0,L,Nx)

# parametres temporels
t0 = 0
Nt = 50000 #timestep
dt = 0.0004

k =np.zeros(Nx)
k[0:129] = np.arange(0 ,Nx/2+1)
k[129:] = np.arange(-Nx/2 + 1 ,0 , 1)
u0 = Kdvanalytic(x,0, c1, a1*L) + Kdvanalytic(x,0,c2, a2*L)
y = kdv_euler(Nx,Nt,u0)
plt.plot(y[:,2000])
#graph
plt.figure(figsize=(6,5))
plt.imshow(np.transpose(y), extent=[0,L,0,dt*Nt])
plt.colorbar()
plt.xlabel('x')
plt.ylabel('t')
plt.title('Korteweg-de Vries -two solutions')
plt.show()
