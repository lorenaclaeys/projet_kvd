
#import kdv
import kdv
import numpy as np
from scipy import cosh, sqrt, linspace
from matplotlib.pyplot import figure,plot,xlim,ylim,grid,title,xlabel,ylabel,show
import matplotlib.animation as animation

# parameters for the initial condition
c1 = 0.75
c2 = 0.4
a1 = 0.33
a2 = 0.65

# space parameters
Nx = 256     # space step
L = 50.      # period
x = np.linspace(0,L,Nx)

# time parameters
t0 = 0
Nt = 500000 #timestep
dt = 0.0004



u0 = kdv.Kdvanalytic(x,0, c1, a1*L) + kdv.Kdvanalytic(x,0,c2, a2*L)
y= kdv.kdv_euler(Nx,Nt,u0)


# parametres animation
interval_image = 1    # intervalle entre deux images exprimÃ© en ms
nb_images = 3000      # nombre d'iamges de l'animation



def init():
    line.set_data([],[])
    return line,

# fonction de tracé de l'animation
def KdV(i):
    for n in range(1,Nt):
        line.set_data(x,y[:,n])
    return line,

# tracÃ© de l'Ã©volution
fig1 = figure(figsize=(8,6))
line, = plot([],[])

xlim(0,L)
ylim(0.0,1.5)
grid(True)
title("Korteweg de Vries")
xlabel("X")
ylabel("U(x,t)")


ani = animation.FuncAnimation(fig1,KdV,init_func=init,frames=nb_images,
                              interval= interval_image,blit=True, repeat=False)
show()
 
